<!-- WIDGET CHATBOT NAB√à PER SHOPIFY CON LINGUETTA MOBILE -->
<!-- Da inserire nel file theme.liquid prima del tag </body> -->

<!-- MODAL OVERLAY (nascosto di default) -->
<div id="nabeChatbotOverlay" class="nabe-chatbot-overlay">
    <div class="nabe-chatbot-container">
        <!-- Header del modal -->
        <div class="nabe-chatbot-header">
            <div class="nabe-chatbot-title">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 2L13.09 8.26L19 9L13.09 9.74L12 16L10.91 9.74L5 9L10.91 8.26L12 2Z" fill="currentColor"/>
                </svg>
                Consulente AI di Nab√®
            </div>
            <button class="nabe-chatbot-close" onclick="closeNabeChatbot()" title="Chiudi">
                ‚úï
            </button>
        </div>

        <!-- Loading -->
        <div id="nabeChatbotLoading" class="nabe-chatbot-loading">
            <div class="nabe-spinner"></div>
            <p style="color: #666; margin: 0;">Caricamento consulente AI...</p>
        </div>

        <!-- iframe (nascosto inizialmente) -->
        <iframe
            id="nabeChatbotIframe"
            class="nabe-chatbot-iframe"
            src=""
            style="display: none;"
            title="Chatbot Nab√®"
            allow="microphone; camera">
        </iframe>
    </div>
</div>

<!-- LINGUETTA MOBILE CON DOMANDE -->
<div id="nabeMobileTab" class="nabe-mobile-tab">
    <div class="nabe-tab-header">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L13.09 8.26L19 9L13.09 9.74L12 16L10.91 9.74L5 9L10.91 8.26L12 2Z" fill="currentColor"/>
        </svg>
        <span>Hai bisogno di aiuto?</span>
    </div>

    <div class="nabe-questions-container">
        <div class="nabe-questions-scroll" id="nabeQuestionsScroll">
            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Ho un bimbo di 3 anni, quale configurazione mi consigli?')">
                <div class="nabe-question-icon">üë∂</div>
                <div class="nabe-question-text">Ho un bimbo di 3 anni, quale configurazione mi consigli?</div>
            </div>

            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Quali sono i materiali utilizzati per i vostri prodotti?')">
                <div class="nabe-question-icon">üåø</div>
                <div class="nabe-question-text">Quali materiali utilizzate?</div>
            </div>

            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Quali sono i tempi di consegna?')">
                <div class="nabe-question-icon">üì¶</div>
                <div class="nabe-question-text">Tempi di consegna?</div>
            </div>

            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Posso personalizzare i colori e tessuti?')">
                <div class="nabe-question-icon">üé®</div>
                <div class="nabe-question-text">Posso personalizzare?</div>
            </div>

            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Come funziona la garanzia sui vostri prodotti?')">
                <div class="nabe-question-icon">‚úÖ</div>
                <div class="nabe-question-text">Info sulla garanzia</div>
            </div>

            <div class="nabe-question-card" onclick="openNabeChatbotWithQuestion('Quali sono le dimensioni disponibili?')">
                <div class="nabe-question-icon">üìè</div>
                <div class="nabe-question-text">Dimensioni disponibili?</div>
            </div>
        </div>
    </div>

    <div class="nabe-tab-indicator">
        <div class="nabe-swipe-hint">‚Üê Scorri ‚Üí</div>
    </div>
</div>

<!-- STILI CSS -->
<style>
    /* ==================== STILI DESKTOP (PULSANTE) ==================== */
    .nabe-chatbot-button {
        background: linear-gradient(135deg, #79aea3, #5a9d8f);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 16px 0;
        box-shadow: 0 4px 12px rgba(121, 174, 163, 0.3);
    }

    .nabe-chatbot-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(121, 174, 163, 0.4);
        background: linear-gradient(135deg, #6b9a8f, #4a8a7a);
    }

    /* ==================== MODAL OVERLAY ==================== */
    .nabe-chatbot-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        z-index: 10000;
        display: none;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(5px);
    }

    .nabe-chatbot-overlay.active {
        display: flex;
    }

    /* Container del chatbot */
    .nabe-chatbot-container {
        width: 95%;
        height: 95%;
        max-width: 1200px;
        max-height: 800px;
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        position: relative;
        animation: slideUp 0.3s ease-out;
    }

    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* Header del modal */
    .nabe-chatbot-header {
        background: linear-gradient(135deg, #79aea3, #5a9d8f);
        color: white;
        padding: 16px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .nabe-chatbot-title {
        font-size: 18px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .nabe-chatbot-close {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        transition: background 0.2s ease;
    }

    .nabe-chatbot-close:hover {
        background: rgba(255, 255, 255, 0.3);
    }

    /* iframe */
    .nabe-chatbot-iframe {
        width: 100%;
        height: calc(100% - 68px);
        border: none;
    }

    /* Loading spinner */
    .nabe-chatbot-loading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 16px;
    }

    .nabe-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #79aea3;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* ==================== LINGUETTA MOBILE ==================== */
    .nabe-mobile-tab {
        display: none; /* Mostrato solo su mobile */
        position: fixed;
        bottom: 0;
        left: 0;
        width: 60%;
        background: linear-gradient(135deg, #79aea3, #5a9d8f);
        border-top-right-radius: 16px;
        box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.2);
        z-index: 9999;
        transition: transform 0.3s ease, opacity 0.3s ease;
        overflow: hidden;
    }

    .nabe-mobile-tab.hidden {
        transform: translateY(100%);
        opacity: 0;
    }

    /* Header della linguetta */
    .nabe-tab-header {
        background: rgba(255, 255, 255, 0.15);
        color: white;
        padding: 10px 16px;
        font-size: 14px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

    /* Container delle domande */
    .nabe-questions-container {
        position: relative;
        overflow: hidden;
    }

    .nabe-questions-scroll {
        display: flex;
        gap: 10px;
        padding: 12px;
        overflow-x: auto;
        scroll-behavior: smooth;
        scrollbar-width: none; /* Firefox */
        -webkit-overflow-scrolling: touch;
    }

    .nabe-questions-scroll::-webkit-scrollbar {
        display: none; /* Chrome, Safari, Opera */
    }

    /* Card delle domande */
    .nabe-question-card {
        flex-shrink: 0;
        background: white;
        border-radius: 12px;
        padding: 12px 14px;
        min-width: 200px;
        max-width: 220px;
        cursor: pointer;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .nabe-question-card:active {
        transform: scale(0.95);
    }

    .nabe-question-icon {
        font-size: 24px;
        flex-shrink: 0;
    }

    .nabe-question-text {
        font-size: 13px;
        color: #333;
        line-height: 1.3;
        font-weight: 500;
    }

    /* Indicatore swipe */
    .nabe-tab-indicator {
        background: rgba(255, 255, 255, 0.1);
        padding: 6px;
        text-align: center;
    }

    .nabe-swipe-hint {
        color: rgba(255, 255, 255, 0.8);
        font-size: 11px;
        font-weight: 500;
        animation: pulse 2s ease-in-out infinite;
    }

    @keyframes pulse {
        0%, 100% { opacity: 0.6; }
        50% { opacity: 1; }
    }

    /* ==================== RESPONSIVE ==================== */

    /* Mobile: mostra linguetta, nascondi pulsante desktop */
    @media (max-width: 768px) {
        .nabe-chatbot-button {
            display: none;
        }

        .nabe-mobile-tab {
            display: block;
        }

        .nabe-chatbot-container {
            width: 100%;
            height: 100%;
            max-width: none;
            max-height: none;
            border-radius: 0;
        }
    }

    /* Desktop: mostra pulsante, nascondi linguetta */
    @media (min-width: 769px) {
        .nabe-mobile-tab {
            display: none !important;
        }

        .nabe-chatbot-button {
            display: flex;
        }
    }
</style>

<!-- JAVASCRIPT -->
<script>
    // ==================== CONFIGURAZIONE ====================
    const CHATBOT_URL = 'https://openai-assistants-quickstart-one-beta.vercel.app';

    // ==================== VARIABILI GLOBALI ====================
    let lastScrollTop = 0;
    let scrollDirection = 'up';
    let currentQuestion = null;

    // ==================== FUNZIONI MODAL ====================

    // Funzione per aprire il chatbot
    function openNabeChatbot() {
        const overlay = document.getElementById('nabeChatbotOverlay');
        const iframe = document.getElementById('nabeChatbotIframe');
        const loading = document.getElementById('nabeChatbotLoading');

        // Mostra l'overlay
        overlay.classList.add('active');

        // Blocca lo scroll del body
        document.body.style.overflow = 'hidden';

        // Carica l'iframe
        if (!iframe.src) {
            const productName = getProductName();
            const productPrice = getProductPrice();

            let chatbotURL = CHATBOT_URL;
            const params = new URLSearchParams();

            if (productName) params.set('product', productName);
            if (productPrice) params.set('price', productPrice);
            if (currentQuestion) params.set('question', currentQuestion);

            if (params.toString()) {
                chatbotURL += '?' + params.toString();
            }

            iframe.src = chatbotURL;

            // Nascondi il loading quando l'iframe √® caricato
            iframe.onload = function() {
                loading.style.display = 'none';
                iframe.style.display = 'block';

                // Invia la domanda all'iframe se presente
                if (currentQuestion) {
                    setTimeout(() => {
                        iframe.contentWindow.postMessage({
                            type: 'SET_INITIAL_MESSAGE',
                            message: currentQuestion
                        }, '*');
                    }, 500);
                }
            };
        } else {
            // iframe gi√† caricato
            loading.style.display = 'none';
            iframe.style.display = 'block';

            // Invia la domanda all'iframe se presente
            if (currentQuestion) {
                iframe.contentWindow.postMessage({
                    type: 'SET_INITIAL_MESSAGE',
                    message: currentQuestion
                }, '*');
            }
        }

        // Reset della domanda corrente
        currentQuestion = null;

        // Analytics
        trackChatbotOpen();
    }

    // Funzione per aprire il chatbot con una domanda predefinita
    function openNabeChatbotWithQuestion(question) {
        currentQuestion = question;
        openNabeChatbot();
    }

    // Funzione per chiudere il chatbot
    function closeNabeChatbot() {
        const overlay = document.getElementById('nabeChatbotOverlay');
        overlay.classList.remove('active');

        // Ripristina lo scroll del body
        document.body.style.overflow = '';
    }

    // ==================== GESTIONE SCROLL LINGUETTA MOBILE ====================

    function handleMobileTabScroll() {
        const mobileTab = document.getElementById('nabeMobileTab');
        if (!mobileTab || window.innerWidth > 768) return;

        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

        // Determina la direzione dello scroll
        if (scrollTop > lastScrollTop) {
            scrollDirection = 'down';
        } else {
            scrollDirection = 'up';
        }

        // Mostra/nascondi la linguetta in base alla direzione
        if (scrollDirection === 'down' && scrollTop > 100) {
            mobileTab.classList.add('hidden');
        } else if (scrollDirection === 'up' || scrollTop < 100) {
            mobileTab.classList.remove('hidden');
        }

        lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
    }

    // Throttle per migliorare le performance
    function throttle(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // ==================== GESTIONE SWIPE DOMANDE ====================

    function initializeSwipe() {
        const questionsScroll = document.getElementById('nabeQuestionsScroll');
        if (!questionsScroll) return;

        let isDown = false;
        let startX;
        let scrollLeft;

        questionsScroll.addEventListener('mousedown', (e) => {
            isDown = true;
            questionsScroll.style.cursor = 'grabbing';
            startX = e.pageX - questionsScroll.offsetLeft;
            scrollLeft = questionsScroll.scrollLeft;
        });

        questionsScroll.addEventListener('mouseleave', () => {
            isDown = false;
            questionsScroll.style.cursor = 'grab';
        });

        questionsScroll.addEventListener('mouseup', () => {
            isDown = false;
            questionsScroll.style.cursor = 'grab';
        });

        questionsScroll.addEventListener('mousemove', (e) => {
            if (!isDown) return;
            e.preventDefault();
            const x = e.pageX - questionsScroll.offsetLeft;
            const walk = (x - startX) * 2;
            questionsScroll.scrollLeft = scrollLeft - walk;
        });

        // Touch events per mobile
        let touchStartX = 0;
        let touchScrollLeft = 0;

        questionsScroll.addEventListener('touchstart', (e) => {
            touchStartX = e.touches[0].pageX;
            touchScrollLeft = questionsScroll.scrollLeft;
        }, { passive: true });

        questionsScroll.addEventListener('touchmove', (e) => {
            const touchX = e.touches[0].pageX;
            const walk = (touchStartX - touchX) * 1.5;
            questionsScroll.scrollLeft = touchScrollLeft + walk;
        }, { passive: true });
    }

    // ==================== EVENT LISTENERS ====================

    // Scroll listener con throttle
    window.addEventListener('scroll', throttle(handleMobileTabScroll, 100));

    // Chiudi premendo ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeNabeChatbot();
        }
    });

    // Chiudi cliccando fuori dal modal
    document.getElementById('nabeChatbotOverlay').addEventListener('click', function(e) {
        if (e.target === this) {
            closeNabeChatbot();
        }
    });

    // Inizializza swipe al caricamento della pagina
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeSwipe);
    } else {
        initializeSwipe();
    }

    // ==================== FUNZIONI HELPER SHOPIFY ====================

    function getProductName() {
        const titleElement = document.querySelector('h1[class*="product"], .product-title, .product__title, h1.h2');
        return titleElement ? titleElement.textContent.trim() : null;
    }

    function getProductPrice() {
        const priceElement = document.querySelector('.price, .product-price, .price__current, .price-item--regular');
        return priceElement ? priceElement.textContent.trim() : null;
    }

    // ==================== ANALYTICS ====================

    function trackChatbotOpen() {
        if (typeof gtag !== 'undefined') {
            gtag('event', 'chatbot_open', {
                'event_category': 'engagement',
                'event_label': currentQuestion ? 'quick_question' : 'manual_open'
            });
        }
    }
</script>
